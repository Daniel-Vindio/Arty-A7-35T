SHAKTI
======

En este archivo está toda la información para construir todas las 
herramientas de desarrollo del microprocesdor Rsic-V de Shakti.

Página principal:
https://gitlab.com/shaktiproject/cores/shakti-soc

Tools Required
--------------

* Vivado:
Ver instrucciones en: 
https://digilent.com/reference/vivado/installing-vivado/v2019.2
Vivado Design Suite - HLx Editions
Versión 2020.2
/tools/Xilinx/Vivado/2020.2/bin/vivado

Es importante que estén descargadas las placas en 
/tools/Xilinx/Vivado/2020.2/data/boards/board_files

Si no están, hay que descargarlas de github y copiar/pegar a mano.
(ver instrucciones)

* Bluespec Compiler
sudo apt-get install ghc libghc-regex-compat-dev libghc-syb-dev \
  libghc-old-time-dev libfontconfig1-dev libx11-dev libxft-dev flex bison \
  tcl-dev tk-dev libfontconfig1-dev libx11-dev libxft-dev gperf iverilog \
  libghc-split-dev

sudo apt-get install build-essential
sudo apt-get install pkg-config
sudo apt-get install autoconf gperf

sudo apt-get install itcl3-dev itk3-dev
sudo apt install git

https://github.com/B-Lang-org/bsc/blob/main/INSTALL.md

cd bsc
make install-src
PREFIX=/home/daniel/Documentos/0-shakti/bsc/inst
(así todas las herramientas están en el mismo sitio, y luego se las llama
para su uso por el PATH).


* Verilator
sudo apt install verilator

* RISC-V Toolchain
sudo apt-get install autoconf automake autotools-dev curl libmpc-dev \
libmpfr-dev libgmp-dev libusb-1.0-0-dev gawk build-essential bison \
flex texinfo gperf libtool patchutils bc zlib1g-dev device-tree-compiler \
pkg-config libexpat-dev

git clone --recursive https://github.com/riscv/riscv-opcodes.git
git clone --recursive https://github.com/riscv/riscv-gnu-toolchain

./configure --prefix=/home/daniel/Documentos/0-shakti/riscv-gnu-toolchain
make

make distclean
./configure \
--prefix=/home/daniel/Documentos/0-shakti/riscv-gnu-toolchain \
--with-arch=rv32gc --with-abi=ilp32d
make


** shakti-tools
git clone https://gitlab.com/shaktiproject/software/shakti-tools.git
cd shakti-tools/riscv32
git submodule update --init --recursive


* openOCD
https://github.com/riscv/riscv-openocd.git
git checkout fd9c54b1feea13f6846c69fc9e1e8dc3a7879717
./bootstrap
./configure \
--enable-jlink \
--enable-remote-bitbang \
--enable-jtag_vpi \
--enable-ftdi \
--disable-werror
make

El ejecutable hay que llevarlo también a vscode - platformio
(más adelante)

* DTC
sudo wget https://git.kernel.org/pub/scm/utils/dtc/dtc.git/snapshot/dtc-1.4.7.tar.gz
sudo tar -xvzf dtc-1.4.7.tar.gz
cd dtc-1.4.7/
sudo make NO_PYTHON=1 PREFIX=/usr/
sudo make install NO_PYTHON=1 PREFIX=/usr/

* Miniterm
sudo apt install python3-serial



Para compilar SoC
=================
https://gitlab.com/shaktiproject/sp2020/-/tree/master/e32-a35
git clone https://gitlab.com/shaktiproject/gc2020.git
cd gc2020/e32-a35/

export PATH=\
/tools/Xilinx/Vivado/2020.2/bin:\
/home/daniel/Documentos/0-shakti/bsc/inst/bin:\
/home/daniel/Documentos/0-shakti/shakti-tools/riscv32/bin:\
/home/daniel/Documentos/0-shakti/riscv-gnu-toolchain/bin:\
/home/daniel/Documentos/0-shakti/riscv-openocd/src:\
${PATH}

sudo ln -sv /usr/lib/x86_64-linux-gnu/libmpfr.so.6 /usr/lib/x86_64-linux-gnu/libmpfr.so.4



Para conectar gdb
=================
export PATH=\
/tools/Xilinx/Vivado/2020.2/bin:\
/home/daniel/Documentos/0-shakti/bsc/inst/bin:\
/home/daniel/Documentos/0-shakti/riscv-gnu-toolchain/bin:\
/home/daniel/Documentos/0-shakti/riscv-openocd/src:\
${PATH}


En otra terminal
sudo miniterm /dev/ttyUSB1 19200
make generate_verilog generate_boot_files ip_build arty_build generate_mcs program_mcs


pk kernel proxi
===============
Para depuración de asm
git clone https://github.com/riscv-software-src/riscv-pk.git
cd riscv-pk
mkdir -v build
cd build
export PATH=/home/daniel/Documentos/0-shakti/shakti-tools/riscv64/bin:${PATH}
../configure --prefix=$PWD --host=riscv64-unknown-elf

pk está en:
/home/daniel/Documentos/0-shakti/riscv-pk/build






